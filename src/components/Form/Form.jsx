import { useRef, useState } from "react";
import { useFormContext } from "../../FormContext";
import "./Form.css";
import emailjs from "@emailjs/browser";
import { toast } from "react-toastify";

export function Form() {
  const [phoneNumber, setPhoneNumber] = useState("");
  const [name, setName] = useState("");
  const { isOpen, closeForm } = useFormContext();
  const [loading, setLoading] = useState(false);

  const formRef = useRef(null);
  const handleClickOutside = (e) => {
    if (formRef.current && !formRef.current.contains(e.target)) {
      closeForm();
    }
  };
  const sendQuizResaults = (e) => {
    e.preventDefault();
    setLoading(true);
    emailjs
      .send(
        "service_g69zpkw",
        "template_l4353a8",
        {
          emailTitle: "–ù–æ–≤–∏–π –∑–∞–ø–∏—Ç –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –∑ —Ñ–æ—Ä–º–∏",
          messagge: `
          üìû –¢–µ–ª–µ—Ñ–æ–Ω: +380${phoneNumber}
          üë§ –Ü–º'—è: ${name}
          `,
        },
        "CnzOwsFQR0Hu_DO7p"
      )
      .then(() => {
        setLoading(false);
        setPhoneNumber("");
        setName("");
        toast.success("–ó–∞—è–≤–∫—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!");
        closeForm();
      })
      .catch((error) => {
        setLoading(false);
        closeForm();
        alert("–ü–æ–º–∏–ª–∫–∞: " + error.text);
        toast.error("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞");
      });
  };
  return (
    <>
      {loading && (
        <div className="loading-overlay">
          <div className="loading-spinner"></div>
        </div>
      )}
      {isOpen && (
        <div className="fixed-form" onClick={handleClickOutside}>
          <div className="form-wrapper" ref={formRef}>
            <form action="" className="modal-form" onSubmit={sendQuizResaults}>
              <h3 className="text-md font-bold" style={{ textAlign: "center" }}>
                –ú–∏ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏
              </h3>
              <h4 className="text-base" style={{ textAlign: "center" }}>
                –ó–∞–ª–∏—à—Ç–µ —Å–≤–æ—ó –∫–æ–Ω—Ç–∞–∫—Ç–∏ –∞–±–æ –∑–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏!
              </h4>
              <a
                href="tel:0682202291"
                className="text-base font-bold"
                style={{ margin: "10px 0" }}
              >
                üá∫üá¶ +38 (068) 220 22 91
              </a>
              <p className="text-base">–í–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è? –ü–∏—à—ñ—Ç—å –Ω–∞–º –≤ :</p>
              <div className="pop-up-icons">
                <a href="https://msng.link/o?+380682202291=vi">
                  <img src="/icons/vb.svg" alt="" className="icon-social" />
                </a>
                <a href="https://t.me/FayniKuhni1">
                  <img src="/icons/tg.svg" alt="" className="icon-social" />
                </a>
              </div>
              <p className="text-sm">–Ü–º'—è</p>
              <input
                type="text"
                className="name-input-modal-form"
                style={{ maxWidth: "100%" }}
                placeholder="–Ü–º'—è"
                value={name}
                onChange={(e) => setName(e.target.value)}
                required
              />
              <p className="text-sm">–¢–µ–ª–µ—Ñ–æ–Ω</p>
              <div
                className="phone-input-wrapper mobile-margins"
                style={{ maxWidth: "100%" }}
              >
                <label className="phone-prefix" htmlFor="phone">
                  +380
                </label>
                <input
                  id="phone"
                  type="tel"
                  value={phoneNumber}
                  onChange={(e) => {
                    let val = e.target.value.replace(/\D/g, ""); // —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏
                    if (val.length <= 9) {
                      setPhoneNumber(val);
                    }
                  }}
                  required
                />
              </div>
              <button className="modal-submit">–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏</button>
            </form>
          </div>
        </div>
      )}
    </>
  );
}
